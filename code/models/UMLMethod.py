# A representation of a Method for a UML
# Description:     
#   This file encapsulates the idea of a method of a class
# Course:   CSCI 420 - Software Engineering
# Authors:  Adisa, Amy, Carli, David, Joan
# Date:     September 27 2020

##########################################################################
# Imports

from models.Variable import Variable
from .Visibility import Visibility

##########################################################################

class UMLMethod(Variable):

    def __init__(self, visibility:Visibility, name:str, _type:str, isstatic:bool=False):
        """Represents a method for a UML Class
        
        Params: 
        - visibility (Visibility) - the visibility of the method,
         either Public or Private
        - name (str) - the name of the method
        - _type (str) - the return type of the method
        - isstatic (bool) - whether the method is static or not 
        """
        self.visibility = visibility
        # Assign name and type in the parent 
        super().__init__(_type, name)
        # Keeps track of whether this is a static method or not
        self.is_static = isstatic 
        # keeps track of all the parameters for this class
        self.parameters = []

##########################################################################

    def get_raw_data(self):
        """Returns a JSON convertible form of the data"""
        return {
                "visibility" : Visibility.to_string(self.visibility),
                "name" : self.name, 
                "type" : self.type
            }

##########################################################################

    @staticmethod
    def from_raw_data(data):
        """Constructs a UMLMethod object from a set of data
        
        Precondition:
        - The data should have been generated by a call to get_raw_data()
        """
        return UMLMethod(Visibility.from_string(data["visibility"]), data["name"], data["type"])
            
##########################################################################